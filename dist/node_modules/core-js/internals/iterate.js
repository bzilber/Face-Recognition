import anObject from"/node_modules/core-js/internals/an-object.js";import isArrayIteratorMethod from"/node_modules/core-js/internals/is-array-iterator-method.js";import toLength from"/node_modules/core-js/internals/to-length.js";import bind from"/node_modules/core-js/internals/function-bind-context.js";import getIteratorMethod from"/node_modules/core-js/internals/get-iterator-method.js";import iteratorClose from"/node_modules/core-js/internals/iterator-close.js";const _ref={exports:{}};(function(module,exports){var Result=function Result(stopped,result){this.stopped=stopped,this.result=result};module.exports=function(iterable,unboundFunction,options){var iterator,iterFn,index,length,result,next,step,that=options&&options.that,AS_ENTRIES=!!(options&&options.AS_ENTRIES),IS_ITERATOR=!!(options&&options.IS_ITERATOR),INTERRUPTED=!!(options&&options.INTERRUPTED),fn=bind(unboundFunction,that,1+AS_ENTRIES+INTERRUPTED),stop=function stop(condition){return iterator&&iteratorClose(iterator),new Result(!0,condition)},callFn=function callFn(value){return AS_ENTRIES?(anObject(value),INTERRUPTED?fn(value[0],value[1],stop):fn(value[0],value[1])):INTERRUPTED?fn(value,stop):fn(value)};if(IS_ITERATOR)iterator=iterable;else{if(iterFn=getIteratorMethod(iterable),"function"!=typeof iterFn)throw TypeError("Target is not iterable");if(isArrayIteratorMethod(iterFn)){for(index=0,length=toLength(iterable.length);length>index;index++)if(result=callFn(iterable[index]),result&&result instanceof Result)return result;return new Result(!1)}iterator=iterFn.call(iterable)}for(next=iterator.next;!(step=next.call(iterator)).done;){try{result=callFn(step.value)}catch(error){throw iteratorClose(iterator),error}if("object"==typeof result&&result&&result instanceof Result)return result}return new Result(!1)}})(_ref,_ref.exports);export default _ref.exports;