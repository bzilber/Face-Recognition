'use strict';import regexpFlags from"/node_modules/core-js/internals/regexp-flags.js";import stickyHelpers from"/node_modules/core-js/internals/regexp-sticky-helpers.js";const _ref={exports:{}};(function(module,exports){var nativeExec=RegExp.prototype.exec,nativeReplace=String.prototype.replace,patchedExec=nativeExec,UPDATES_LAST_INDEX_WRONG=function(){var re1=/a/,re2=/b*/g;return nativeExec.call(re1,"a"),nativeExec.call(re2,"a"),0!==re1.lastIndex||0!==re2.lastIndex}(),UNSUPPORTED_Y=stickyHelpers.UNSUPPORTED_Y||stickyHelpers.BROKEN_CARET,NPCG_INCLUDED=/()??/.exec("")[1]!==void 0,PATCH=UPDATES_LAST_INDEX_WRONG||NPCG_INCLUDED||UNSUPPORTED_Y;PATCH&&(patchedExec=function exec(str){var lastIndex,reCopy,match,i,re=this,sticky=UNSUPPORTED_Y&&re.sticky,flags=regexpFlags.call(re),source=re.source,charsAdded=0,strCopy=str;return sticky&&(flags=flags.replace("y",""),-1===flags.indexOf("g")&&(flags+="g"),strCopy=String(str).slice(re.lastIndex),0<re.lastIndex&&(!re.multiline||re.multiline&&"\n"!==str[re.lastIndex-1])&&(source="(?: "+source+")",strCopy=" "+strCopy,charsAdded++),reCopy=new RegExp("^(?:"+source+")",flags)),NPCG_INCLUDED&&(reCopy=new RegExp("^"+source+"$(?!\\s)",flags)),UPDATES_LAST_INDEX_WRONG&&(lastIndex=re.lastIndex),match=nativeExec.call(sticky?reCopy:re,strCopy),sticky?match?(match.input=match.input.slice(charsAdded),match[0]=match[0].slice(charsAdded),match.index=re.lastIndex,re.lastIndex+=match[0].length):re.lastIndex=0:UPDATES_LAST_INDEX_WRONG&&match&&(re.lastIndex=re.global?match.index+match[0].length:lastIndex),NPCG_INCLUDED&&match&&1<match.length&&nativeReplace.call(match[0],reCopy,function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(match[i]=void 0)}),match}),module.exports=patchedExec})(_ref,_ref.exports);export default _ref.exports;