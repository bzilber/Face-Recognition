'use strict';import $ from"/node_modules/core-js/internals/export.js";import isObject from"/node_modules/core-js/internals/is-object.js";import isArray from"/node_modules/core-js/internals/is-array.js";import toAbsoluteIndex from"/node_modules/core-js/internals/to-absolute-index.js";import toLength from"/node_modules/core-js/internals/to-length.js";import toIndexedObject from"/node_modules/core-js/internals/to-indexed-object.js";import createProperty from"/node_modules/core-js/internals/create-property.js";import wellKnownSymbol from"/node_modules/core-js/internals/well-known-symbol.js";import arrayMethodHasSpeciesSupport from"/node_modules/core-js/internals/array-method-has-species-support.js";import arrayMethodUsesToLength from"/node_modules/core-js/internals/array-method-uses-to-length.js";var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("slice"),USES_TO_LENGTH=arrayMethodUsesToLength("slice",{ACCESSORS:!0,0:0,1:2}),SPECIES=wellKnownSymbol("species"),nativeSlice=[].slice,max=Math.max;$({target:"Array",proto:!0,forced:!HAS_SPECIES_SUPPORT||!USES_TO_LENGTH},{slice:function slice(start,end){var Constructor,result,n,O=toIndexedObject(this),length=toLength(O.length),k=toAbsoluteIndex(start,length),fin=toAbsoluteIndex(void 0===end?length:end,length);if(isArray(O)&&(Constructor=O.constructor,"function"==typeof Constructor&&(Constructor===Array||isArray(Constructor.prototype))?Constructor=void 0:isObject(Constructor)&&(Constructor=Constructor[SPECIES],null===Constructor&&(Constructor=void 0)),Constructor===Array||void 0===Constructor))return nativeSlice.call(O,k,fin);for(result=new(void 0===Constructor?Array:Constructor)(max(fin-k,0)),n=0;k<fin;k++,n++)k in O&&createProperty(result,n,O[k]);return result.length=n,result}});