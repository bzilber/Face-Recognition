'use strict';import $ from"/node_modules/core-js/internals/export.js";import toInteger from"/node_modules/core-js/internals/to-integer.js";import thisNumberValue from"/node_modules/core-js/internals/this-number-value.js";import repeat from"/node_modules/core-js/internals/string-repeat.js";import fails from"/node_modules/core-js/internals/fails.js";var nativeToFixed=1 .toFixed,floor=Math.floor,pow=function pow(x,n,acc){return 0===n?acc:1==n%2?pow(x,n-1,acc*x):pow(x*x,n/2,acc)},log=function log(x){for(var n=0,x2=x;4096<=x2;)n+=12,x2/=4096;for(;2<=x2;)n+=1,x2/=2;return n},FORCED="0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==1000000000000000100 .toFixed(0)||!fails(function(){nativeToFixed.call({})});$({target:"Number",proto:!0,forced:FORCED},{toFixed:function toFixed(fractionDigits){var e,z,j,k,number=thisNumberValue(this),fractDigits=toInteger(fractionDigits),data=[0,0,0,0,0,0],sign="",result="0",multiply=function multiply(n,c){for(var index=-1,c2=c;6>++index;)c2+=n*data[index],data[index]=c2%1e7,c2=floor(c2/1e7)},divide=function divide(n){for(var index=6,c=0;0<=--index;)c+=data[index],data[index]=floor(c/n),c=1e7*(c%n)},dataToString=function dataToString(){for(var index=6,s="";0<=--index;)if(""!==s||0===index||0!==data[index]){var t=String(data[index]);s=""===s?t:s+repeat.call("0",7-t.length)+t}return s};if(0>fractDigits||20<fractDigits)throw RangeError("Incorrect fraction digits");if(number!=number)return"NaN";if(-1e21>=number||1e21<=number)return String(number);if(0>number&&(sign="-",number=-number),1e-21<number)if(e=log(number*pow(2,69,1))-69,z=0>e?number*pow(2,-e,1):number/pow(2,e,1),z*=4503599627370496,e=52-e,0<e){for(multiply(0,z),j=fractDigits;7<=j;)multiply(1e7,0),j-=7;for(multiply(pow(10,j,1),0),j=e-1;23<=j;)divide(1<<23),j-=23;divide(1<<j),multiply(1,1),divide(2),result=dataToString()}else multiply(0,z),multiply(1<<-e,0),result=dataToString()+repeat.call("0",fractDigits);return 0<fractDigits?(k=result.length,result=sign+(k<=fractDigits?"0."+repeat.call("0",fractDigits-k)+result:result.slice(0,k-fractDigits)+"."+result.slice(k-fractDigits))):result=sign+result,result}});