'use strict';import fixRegExpWellKnownSymbolLogic from"/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js";import anObject from"/node_modules/core-js/internals/an-object.js";import toLength from"/node_modules/core-js/internals/to-length.js";import requireObjectCoercible from"/node_modules/core-js/internals/require-object-coercible.js";import advanceStringIndex from"/node_modules/core-js/internals/advance-string-index.js";import regExpExec from"/node_modules/core-js/internals/regexp-exec-abstract.js";fixRegExpWellKnownSymbolLogic("match",1,function(MATCH,nativeMatch,maybeCallNative){return[function match(regexp){var O=requireObjectCoercible(this),matcher=regexp==null?void 0:regexp[MATCH];return matcher===void 0?new RegExp(regexp)[MATCH](String(O)):matcher.call(regexp,O)},function(regexp){var res=maybeCallNative(nativeMatch,regexp,this);if(res.done)return res.value;var rx=anObject(regexp),S=String(this);if(!rx.global)return regExpExec(rx,S);var fullUnicode=rx.unicode;rx.lastIndex=0;for(var result,A=[],n=0;null!==(result=regExpExec(rx,S));){var matchStr=String(result[0]);A[n]=matchStr,""===matchStr&&(rx.lastIndex=advanceStringIndex(S,toLength(rx.lastIndex),fullUnicode)),n++}return 0===n?null:A}]});