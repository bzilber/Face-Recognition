'use strict';import fixRegExpWellKnownSymbolLogic from"/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js";import anObject from"/node_modules/core-js/internals/an-object.js";import toObject from"/node_modules/core-js/internals/to-object.js";import toLength from"/node_modules/core-js/internals/to-length.js";import toInteger from"/node_modules/core-js/internals/to-integer.js";import requireObjectCoercible from"/node_modules/core-js/internals/require-object-coercible.js";import advanceStringIndex from"/node_modules/core-js/internals/advance-string-index.js";import regExpExec from"/node_modules/core-js/internals/regexp-exec-abstract.js";var max=Math.max,min=Math.min,floor=Math.floor,SUBSTITUTION_SYMBOLS=/\$([$&'`]|\d\d?|<[^>]*>)/g,SUBSTITUTION_SYMBOLS_NO_NAMED=/\$([$&'`]|\d\d?)/g,maybeToString=function maybeToString(it){return it===void 0?it:String(it)};fixRegExpWellKnownSymbolLogic("replace",2,function(REPLACE,nativeReplace,maybeCallNative,reason){function getSubstitution(matched,str,position,captures,namedCaptures,replacement){var tailPos=position+matched.length,m=captures.length,symbols=SUBSTITUTION_SYMBOLS_NO_NAMED;return void 0!==namedCaptures&&(namedCaptures=toObject(namedCaptures),symbols=SUBSTITUTION_SYMBOLS),nativeReplace.call(replacement,symbols,function(match,ch){var capture;switch(ch.charAt(0)){case"$":return"$";case"&":return matched;case"`":return str.slice(0,position);case"'":return str.slice(tailPos);case"<":capture=namedCaptures[ch.slice(1,-1)];break;default:var n=+ch;if(0==n)return match;if(n>m){var f=floor(n/10);return 0===f?match:f<=m?void 0===captures[f-1]?ch.charAt(1):captures[f-1]+ch.charAt(1):match}capture=captures[n-1];}return void 0===capture?"":capture})}var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE=reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,REPLACE_KEEPS_$0=reason.REPLACE_KEEPS_$0,UNSAFE_SUBSTITUTE=REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE?"$":"$0";return[function replace(searchValue,replaceValue){var O=requireObjectCoercible(this),replacer=searchValue==null?void 0:searchValue[REPLACE];return replacer===void 0?nativeReplace.call(String(O),searchValue,replaceValue):replacer.call(searchValue,O,replaceValue)},function(regexp,replaceValue){if(!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE&&REPLACE_KEEPS_$0||"string"==typeof replaceValue&&-1===replaceValue.indexOf(UNSAFE_SUBSTITUTE)){var res=maybeCallNative(nativeReplace,regexp,this,replaceValue);if(res.done)return res.value}var rx=anObject(regexp),S=String(this),functionalReplace="function"==typeof replaceValue;functionalReplace||(replaceValue=String(replaceValue));var global=rx.global;if(global){var fullUnicode=rx.unicode;rx.lastIndex=0}for(var result,results=[];(result=regExpExec(rx,S),null!==result)&&!(results.push(result),!global);){var matchStr=String(result[0]);""===matchStr&&(rx.lastIndex=advanceStringIndex(S,toLength(rx.lastIndex),fullUnicode))}for(var accumulatedResult="",nextSourcePosition=0,i=0;i<results.length;i++){result=results[i];for(var matched=String(result[0]),position=max(min(toInteger(result.index),S.length),0),captures=[],j=1;j<result.length;j++)captures.push(maybeToString(result[j]));var namedCaptures=result.groups;if(functionalReplace){var replacerArgs=[matched].concat(captures,position,S);namedCaptures!==void 0&&replacerArgs.push(namedCaptures);var replacement=String(replaceValue.apply(void 0,replacerArgs))}else replacement=getSubstitution(matched,S,position,captures,namedCaptures,replaceValue);position>=nextSourcePosition&&(accumulatedResult+=S.slice(nextSourcePosition,position)+replacement,nextSourcePosition=position+matched.length)}return accumulatedResult+S.slice(nextSourcePosition)}]});