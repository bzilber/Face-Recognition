'use strict';import $ from"/node_modules/core-js/internals/export.js";import IS_PURE from"/node_modules/core-js/internals/is-pure.js";import getBuiltIn from"/node_modules/core-js/internals/get-built-in.js";import anObject from"/node_modules/core-js/internals/an-object.js";import aFunction from"/node_modules/core-js/internals/a-function.js";import bind from"/node_modules/core-js/internals/function-bind-context.js";import speciesConstructor from"/node_modules/core-js/internals/species-constructor.js";import getSetIterator from"/node_modules/core-js/internals/get-set-iterator.js";import iterate from"/node_modules/core-js/internals/iterate.js";$({target:"Set",proto:!0,real:!0,forced:IS_PURE},{filter:function filter(callbackfn){var set=anObject(this),iterator=getSetIterator(set),boundFunction=bind(callbackfn,1<arguments.length?arguments[1]:void 0,3),newSet=new(speciesConstructor(set,getBuiltIn("Set"))),adder=aFunction(newSet.add);return iterate(iterator,function(value){boundFunction(value,value,set)&&adder.call(newSet,value)},{IS_ITERATOR:!0}),newSet}});